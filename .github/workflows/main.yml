name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch (for now)
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check out the repo, along with the LanguageServer submodule
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      
      - name: Fetch all history and tags from all branches for gitversion
        run: git fetch --prune --unshallow
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.4.1

      # Needed for building the language server
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
        
      - name: Clean install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
            versionSpec: '5.x'

      - name: Execute GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.7
        
      - name: Print version information
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

      - name: Update metadata in package.json
        uses: onlyutkarsh/patch-files-action@v1.0.1
        with:
          files: '${{github.workspace}}/package.json'
          patch-syntax: |
            = /version => "${{ steps.gitversion.outputs.semVer }}"

      - name: Add prerelease tag
        if: ${{ github.ref.type != 'tag' }}
        run: |
          echo "RELEASE_FLAG=--pre-release" >> $GITHUB_ENV
      
      - name: Compile and create .vsix
        run: npx vsce package ${{ env.RELEASE_FLAG }}
        
      - name: Print vsix path
        run: |
          echo "VSIX Path: ${{ env.vsix_path }}"

      - name: Upload .vsix as artifact
        uses: actions/upload-artifact@v1
        with:
          name: yarn-spinner-${{steps.gitversion.outputs.semVer}}.vsix
          path: ${{github.workspace}}/yarn-spinner-${{steps.gitversion.outputs.semVer}}.vsix

      - name: Publish to Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          npx vsce publish ${{ env.RELEASE_FLAG }}  -i ${{github.workspace}}/yarn-spinner-${{steps.gitversion.outputs.semVer}}.vsix
        
